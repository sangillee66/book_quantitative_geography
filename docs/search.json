[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Quartitative Geography",
    "section": "",
    "text": "서장\n이것은 계량지리학 웹북이다.",
    "crumbs": [
      "서장"
    ]
  },
  {
    "objectID": "part_2.html",
    "href": "part_2.html",
    "title": "기술통계와 탐색적 데이터 분석",
    "section": "",
    "text": "이 장에서 예제로 사용할 데이터를 불러와 정리한다. 필수적인 패키지를 불러온다.\n\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(writexl)\nlibrary(sf)\nlibrary(reactable)\n\n우선 속성 데이터를 불러와 정리한다. 전자는 출생과 사망 변수가 모두 포함되어 있고, 후자에는 출생 관련 변수만 들어 있다. 후자만 사용해도 무방한데, 사망 변수도 넣고 싶을 뿐만 아니라 후자에는 mom_age 변수가 없어서 어쩔 수 없이 합쳐야 한다.\n\nmap_data_2023 &lt;- read_excel(\"D:/My R/Population Geography/4 Population Dynamics/Vital_Map_Data_Sigungu_2023.xlsx\")\nvital_data_2023 &lt;- read_excel(\"D:/My R/Quantitative Geography/kor_vital_data_2023.xlsx\")\n\n두 데이터를 결합해 완전한 데이터를 만든다.\n\ndf_kr_2023 &lt;- vital_data_2023 |&gt; \n  left_join(\n    map_data_2023 |&gt; select(Region_CD, Death, CDR, MOM_age, SMR1), \n    join_by(SGG_CD == Region_CD)\n  ) |&gt; \n  relocate(\n    MOM_age, .before = TFR,\n  ) |&gt; \n  rename(\n    region = Region, \n    sudo = Sudo,\n    births = Births,\n    increase = NIncrease, \n    p_f1549 = P_F1549,\n    mom_age = MOM_age, \n    deaths = Death, \n    SMR = SMR1\n  )\nreactable(\n  df_kr_2023,\n  defaultColDef = colDef(\n    style = list(fontSize = \"15px\")\n  ),\n  columns = list(\n    CBR = colDef(format = colFormat(digits = 3)), \n    RNI = colDef(format = colFormat(digits = 3)), \n    GFR = colDef(format = colFormat(digits = 3)), \n    p_f1549 = colDef(format = colFormat(digits = 3)), \n    CDR = colDef(format = colFormat(digits = 3)), \n    SMR = colDef(format = colFormat(digits = 3)),\n    births = colDef(format = colFormat(separators = TRUE)),\n    increase = colDef(format = colFormat(separators = TRUE)),\n    deaths = colDef(format = colFormat(separators = TRUE))\n  )\n)\n\n\n\n\n\n엑셀과 rds 포맷으로 저장해 둔다.\n\nwrite_xlsx(\n  df_kr_2023, \"data/df_kr_2023.xlsx\"\n)\nwrite_rds(\n  df_kr_2023, \"data/df_kr_2023.rds\"\n)\n\n형상 데이터를 불러온다.\n\nsf_sd &lt;- read_sf(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/3 Generalization/2023_2Q/SIDO_2023_2Q_GEN_0050.shp\", options = \"ENCODING=CP949\")\nsf_sgg &lt;- read_sf(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/3 Generalization/2023_2Q/SIGUNGU1_2023_2Q_GEN_0050.shp\", options = \"ENCODING=CP949\")\nsf_sd_line &lt;- read_sf(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/3 Generalization/2023_2Q/SIDO_Polyline_2023_2Q_GEN_0050.shp\", options = \"ENCODING=CP949\")\nsf_box_seohae &lt;- sf_sd_line &lt;- read_sf(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/3 Generalization/2023_2Q/BBOX_Seohae3_2023_2Q_GEN_0050.shp\", options = \"ENCODING=CP949\")\nsf_box_ulleung &lt;- sf_sd_line &lt;- read_sf(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/3 Generalization/2023_2Q/BBOX_Ulleung_2023_2Q_GEN_0050.shp\", options = \"ENCODING=CP949\")",
    "crumbs": [
      "기술통계와 탐색적 데이터 분석"
    ]
  },
  {
    "objectID": "1_2_data_exploration.html",
    "href": "1_2_data_exploration.html",
    "title": "\n2  계량지리학\n",
    "section": "",
    "text": "2.1 EDA의 정의와 필요성",
    "crumbs": [
      "통계적 방법론과 계량지리학",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>계량지리학</span>"
    ]
  },
  {
    "objectID": "4_3_non_parametric.html",
    "href": "4_3_non_parametric.html",
    "title": "\n10  비모수적 가설검정\n",
    "section": "",
    "text": "10.1 단일표본 중위수 검정\nlibrary(tidyverse)\n\ncommu_time &lt;- sample(c(22, 23, 25, 27, 27, 28, 28, 29, 29, 31, 33, 37, 37, 38, 39, 42, 43, 43, 43, 58))\n\nm0 &lt;- 30\n\nd &lt;- commu_time - m0\nd\n\n [1] -5  9 -8 -3 -2 12  3  8  7  1  7 13 -2 -1 -3 28 13 -7 -1 13\n\nd_abs &lt;- abs(d)\nd_abs\n\n [1]  5  9  8  3  2 12  3  8  7  1  7 13  2  1  3 28 13  7  1 13\n\nranks &lt;- rank(d_abs)\nranks\n\n [1]  9.0 15.0 13.5  7.0  4.5 16.0  7.0 13.5 11.0  2.0 11.0 18.0  4.5  2.0  7.0\n[16] 20.0 18.0 11.0  2.0 18.0\n\nsigned_ranks &lt;- ranks * sign(d)\nsigned_ranks\n\n [1]  -9.0  15.0 -13.5  -7.0  -4.5  16.0   7.0  13.5  11.0   2.0  11.0  18.0\n[13]  -4.5  -2.0  -7.0  20.0  18.0 -11.0  -2.0  18.0\n\nW &lt;- sum(ranks[d &gt; 0])\nW\n\n[1] 149.5\n\ndf_W &lt;- tibble(\n  commu_time, d, d_abs, ranks, signed_ranks\n)\ndf_W\n\n# A tibble: 20 × 5\n   commu_time     d d_abs ranks signed_ranks\n        &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;        &lt;dbl&gt;\n 1         25    -5     5   9           -9  \n 2         39     9     9  15           15  \n 3         22    -8     8  13.5        -13.5\n 4         27    -3     3   7           -7  \n 5         28    -2     2   4.5         -4.5\n 6         42    12    12  16           16  \n 7         33     3     3   7            7  \n 8         38     8     8  13.5         13.5\n 9         37     7     7  11           11  \n10         31     1     1   2            2  \n11         37     7     7  11           11  \n12         43    13    13  18           18  \n13         28    -2     2   4.5         -4.5\n14         29    -1     1   2           -2  \n15         27    -3     3   7           -7  \n16         58    28    28  20           20  \n17         43    13    13  18           18  \n18         23    -7     7  11          -11  \n19         29    -1     1   2           -2  \n20         43    13    13  18           18  \n\ndf_W |&gt; \n  group_by(signed_ranks &gt;= 0) |&gt; \n  summarize(\n    sum_rank = sum(signed_ranks)\n  )\n\n# A tibble: 2 × 2\n  `signed_ranks &gt;= 0` sum_rank\n  &lt;lgl&gt;                  &lt;dbl&gt;\n1 FALSE                  -60.5\n2 TRUE                   150. \n\n# 부호 검정\n\ndf_W |&gt; summarize(\n  mean(commu_time &lt; 30)\n)\n\n# A tibble: 1 × 1\n  `mean(commu_time &lt; 30)`\n                    &lt;dbl&gt;\n1                    0.45\n\nZ_W = (mean(df_W$commu_time &lt; 30) - 0.5)/sqrt(0.45*0.55/20)\nZ_W\n\n[1] -0.4494666\n\nP_Z_W = 2*(pnorm(Z_W))\nP_Z_W\n\n[1] 0.6530951\n\nwilcox.test(commu_time, mu = 30)\n\n\n    Wilcoxon signed rank test with continuity correction\n\ndata:  commu_time\nV = 149.5, p-value = 0.09992\nalternative hypothesis: true location is not equal to 30\n\nwilcox &lt;- (60.5 - 20*21/4)/sqrt(20*21*41/24)\nwilcox\n\n[1] -1.661304\n\n2*(pnorm(wilcox))\n\n[1] 0.09665245",
    "crumbs": [
      "가설검정",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>비모수적 가설검정</span>"
    ]
  },
  {
    "objectID": "1_2_data_exploration.html#eda의-정의와-필요성",
    "href": "1_2_data_exploration.html#eda의-정의와-필요성",
    "title": "\n2  계량지리학\n",
    "section": "",
    "text": "2.1.1 Datasaurus 데이터\n왜 EDA가 중요한 가를 얘기할 때 예시로 가장 많이 등장하는 데이터가 Datasaurus dozen이라는 데이터이다. 이 데이터는 위키피디어의 데이터사이언스에 나타나 있기도 하다. 이 데이터는 datasauRus 패키지에서 이용가능하다.\n\nlibrary(tidyverse)\nlibrary(summarytools)\nlibrary(datasauRus)\nlibrary(flextable)\nlibrary(reactable)\nlibrary(broom)\n\n우선 데이터를 살펴본다. summarytools 패키지의 dfsummary() 함수를 사용한다. dataset 변수에 13개의 서로다른 데이터셋 이름이 들어가 있고, 각 데이터셋은 142개의 케이스와 x, y의 두 변수로 이루어져 있음을 알 수 있다.\n\ndatasaurus_dozen |&gt; \n  dfSummary(max.distinct.values = 13) |&gt; stview() \n\n요약 테이블을 만든다.\n\nsumm_tbl &lt;- datasaurus_dozen |&gt; \n  summarize(\n    mean_x = mean(x, na.rm = TRUE), \n    mean_y = mean(y, na.rm = TRUE),\n    sd_x = sd(x, na.rm = TRUE), \n    sd_y = sd(y, na.rm = TRUE),\n    cor_xy = cor(x, y),\n    .by = dataset\n  ) |&gt; \n  left_join(\n    datasaurus_dozen |&gt; \n      group_by(dataset) |&gt; \n      group_modify(~ tidy(lm(y ~ x, data = .x))) |&gt; \n      select(dataset, term, estimate) |&gt; \n      pivot_wider(names_from = term, values_from = estimate) |&gt; \n      rename(intercept = `(Intercept)`, slope = x)\n  ) |&gt; \n    rename(\n    \"Dataset\"     = dataset,\n    \"Mean x\"      = mean_x,\n    \"Mean y\"      = mean_y,\n    \"Std Dev x\"   = sd_x,\n    \"Std Dev y\"   = sd_y,\n    \"Corr x y\"    = cor_xy,\n    \"Intercept\"   = intercept,\n    \"Coefficient\" = slope\n  )\nsumm_tbl\n\n# A tibble: 13 × 8\n   Dataset    `Mean x` `Mean y` `Std Dev x` `Std Dev y` `Corr x y` Intercept\n   &lt;chr&gt;         &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt;       &lt;dbl&gt;      &lt;dbl&gt;     &lt;dbl&gt;\n 1 dino           54.3     47.8        16.8        26.9    -0.0645      53.5\n 2 away           54.3     47.8        16.8        26.9    -0.0641      53.4\n 3 h_lines        54.3     47.8        16.8        26.9    -0.0617      53.2\n 4 v_lines        54.3     47.8        16.8        26.9    -0.0694      53.9\n 5 x_shape        54.3     47.8        16.8        26.9    -0.0656      53.6\n 6 star           54.3     47.8        16.8        26.9    -0.0630      53.3\n 7 high_lines     54.3     47.8        16.8        26.9    -0.0685      53.8\n 8 dots           54.3     47.8        16.8        26.9    -0.0603      53.1\n 9 circle         54.3     47.8        16.8        26.9    -0.0683      53.8\n10 bullseye       54.3     47.8        16.8        26.9    -0.0686      53.8\n11 slant_up       54.3     47.8        16.8        26.9    -0.0686      53.8\n12 slant_down     54.3     47.8        16.8        26.9    -0.0690      53.8\n13 wide_lines     54.3     47.8        16.8        26.9    -0.0666      53.6\n# ℹ 1 more variable: Coefficient &lt;dbl&gt;\n\n\n이것을 DT 패키지를 이용해 깨끗한 표로 정리하면 다음과 같다.\n\nlibrary(gt)\ngt_tbl &lt;- summ_tbl %&gt;%\n  gt() %&gt;%\n  # 그룹 헤더(스패너)\n  tab_spanner(\n    label = \"Summary Statistics\",\n    id    = \"sumstat\",\n    columns = c(`Mean x`, `Mean y`, `Std Dev x`, `Std Dev y`, `Corr x y`)\n  ) |&gt; \n  tab_spanner(\n    label = \"Regression Results\",\n    id    = \"regres\",\n    columns = c(`Intercept`, `Coefficient`)\n  ) |&gt; \n  # 숫자 포맷\n  fmt_number(columns = -Dataset, decimals = 3) |&gt; \n  # 헤더(모든 컬럼 라벨 + 스패너) : 청색 바탕/흰 글씨\n  tab_style(\n    style = list(\n      cell_fill(color = \"#1f4e79\"),\n      cell_text(color = \"white\", weight = \"bold\")\n    ),\n    locations = list(\n      cells_column_labels(columns = everything()),\n      cells_column_spanners(spanners = c(\"sumstat\", \"regres\"))\n    )\n  ) |&gt; \n  # Dataset 컬럼(본문 셀): 옅은 초록\n  tab_style(\n    style = cell_fill(color = \"#d9ead3\"),\n    locations = cells_body(columns = Dataset)\n  ) |&gt; \n  # Summary Statistics 컬럼(본문 셀): 하늘색\n  tab_style(\n    style = cell_fill(color = \"#d0e7ff\"),\n    locations = cells_body(columns = c(`Mean x`, `Mean y`, `Std Dev x`, `Std Dev y`, `Corr x y`))\n  ) |&gt; \n  # Regression Results 컬럼(본문 셀): 회색\n  tab_style(\n    style = cell_fill(color = \"#e0e0e0\"),\n    locations = cells_body(columns = c(`Intercept`, `Coefficient`))\n  ) |&gt; \n  # 가독성 옵션(선택)\n  opt_row_striping()\n\ngt_tbl\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDataset\n\nSummary Statistics\n\n\nRegression Results\n\n\n\nMean x\nMean y\nStd Dev x\nStd Dev y\nCorr x y\nIntercept\nCoefficient\n\n\n\n\ndino\n54.263\n47.832\n16.765\n26.935\n−0.064\n53.453\n−0.104\n\n\naway\n54.266\n47.835\n16.770\n26.940\n−0.064\n53.425\n−0.103\n\n\nh_lines\n54.261\n47.830\n16.766\n26.940\n−0.062\n53.211\n−0.099\n\n\nv_lines\n54.270\n47.837\n16.770\n26.938\n−0.069\n53.891\n−0.112\n\n\nx_shape\n54.260\n47.840\n16.770\n26.930\n−0.066\n53.554\n−0.105\n\n\nstar\n54.267\n47.840\n16.769\n26.930\n−0.063\n53.327\n−0.101\n\n\nhigh_lines\n54.269\n47.835\n16.767\n26.940\n−0.069\n53.809\n−0.110\n\n\ndots\n54.260\n47.840\n16.768\n26.930\n−0.060\n53.098\n−0.097\n\n\ncircle\n54.267\n47.838\n16.760\n26.930\n−0.068\n53.797\n−0.110\n\n\nbullseye\n54.269\n47.831\n16.769\n26.936\n−0.069\n53.809\n−0.110\n\n\nslant_up\n54.266\n47.831\n16.769\n26.939\n−0.069\n53.813\n−0.110\n\n\nslant_down\n54.268\n47.836\n16.767\n26.936\n−0.069\n53.850\n−0.111\n\n\nwide_lines\n54.267\n47.832\n16.770\n26.938\n−0.067\n53.635\n−0.107\n\n\n\n\n\n\n우선\n\nggplot(datasaurus_dozen) +\n  geom_point(aes(x = x, y = y)) + \n  facet_wrap(~ dataset)\n\n\n\n\n\n\n\n우리나라 인구 동태 데이터 불러오기\n\ndf_kr &lt;- read_rds(\"data/df_kr_2023.rds\")\n\n다양한 기술통계를 계산한다.\n\ndf_kr |&gt; \n  summarize(\n    var = var(TFR), \n    sd = sd(TFR)\n  )\n\n# A tibble: 1 × 2\n     var    sd\n   &lt;dbl&gt; &lt;dbl&gt;\n1 0.0456 0.214\n\nsummary(df_kr$TFR)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.3200  0.6890  0.7900  0.8238  0.9170  1.6510 \n\nlibrary(psych)\ndescribe(df_kr$TFR)\n\n   vars   n mean   sd median trimmed  mad  min  max range skew kurtosis   se\nX1    1 229 0.82 0.21   0.79    0.81 0.17 0.32 1.65  1.33 0.79     0.93 0.01\n\nlibrary(moments)\nskewness(df_kr$TFR)\n\n[1] 0.7937934\n\nkurtosis(df_kr$TFR) \n\n[1] 3.966439\n\n\n\nggplot(df_kr) + geom_bar(aes(x = region))\n\n\n\n\n\n\n\n\nlibrary(skimr)\nskim(df_kr)\n\n\nData summary\n\n\nName\ndf_kr\n\n\nNumber of rows\n229\n\n\nNumber of columns\n17\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n5\n\n\nnumeric\n12\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\nSGG_NM\n0\n1\n2\n4\n0\n207\n0\n\n\nSD_CD\n0\n1\n2\n2\n0\n17\n0\n\n\nSD_NM\n0\n1\n3\n7\n0\n17\n0\n\n\nregion\n0\n1\n3\n4\n0\n5\n0\n\n\nsudo\n0\n1\n3\n4\n0\n2\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\nSGG_CD\n0\n1\n29559.34\n8376.92\n11010.00\n23090.00\n32510.00\n36520.00\n39020.00\n▂▂▂▅▇\n\n\nbirths\n0\n1\n1004.49\n1138.41\n26.00\n172.00\n630.00\n1472.00\n6714.00\n▇▂▁▁▁\n\n\nCBR\n0\n1\n3.96\n1.23\n1.40\n3.08\n3.93\n4.76\n7.58\n▃▇▇▃▁\n\n\nincrease\n0\n1\n-534.86\n529.41\n-2201.00\n-850.00\n-548.00\n-308.00\n3138.00\n▁▇▁▁▁\n\n\nRNI\n0\n1\n-5.90\n5.31\n-19.31\n-10.01\n-4.47\n-1.67\n3.88\n▂▃▅▇▃\n\n\nGFR\n0\n1\n21.79\n5.59\n9.33\n18.09\n20.96\n24.48\n45.97\n▂▇▃▁▁\n\n\np_f1549\n0\n1\n37.00\n9.49\n17.75\n28.14\n38.72\n44.92\n54.49\n▅▅▅▇▃\n\n\nmom_age\n0\n1\n33.42\n0.69\n31.71\n32.98\n33.35\n33.90\n35.57\n▂▇▇▅▁\n\n\nTFR\n0\n1\n0.82\n0.21\n0.32\n0.69\n0.79\n0.92\n1.65\n▂▇▅▂▁\n\n\ndeaths\n0\n1\n1539.35\n1124.27\n72.00\n724.00\n1269.00\n2022.00\n6578.00\n▇▅▂▁▁\n\n\nCDR\n0\n1\n9.86\n4.42\n3.69\n6.03\n8.57\n13.28\n21.19\n▇▅▃▃▁\n\n\nSMR\n0\n1\n6.93\n0.78\n4.32\n6.52\n7.02\n7.43\n8.80\n▁▂▇▇▂\n\n\n\n\nlibrary(summarytools)\ndescr(df_kr) |&gt; stview()\ndfSummary(df_kr) |&gt; stview()\n\nlibrary(flextable)\ndf_kr |&gt; summarizor() |&gt; as_flextable()\n\n\n\n\n\n\n\n\nStatistic(N=229)\n\n\n\nSGG_CD\nMean (SD)\n\n29,559.3 (8,376.9)\n\n\nMedian (IQR)\n\n32,510.0 (13,430.0)\n\n\nRange\n\n11,010.0 - 39,020.0\n\n\nSGG_NM\n가평군\n\n1 (0.4%)\n\n\n강남구\n\n1 (0.4%)\n\n\n강동구\n\n1 (0.4%)\n\n\n강릉시\n\n1 (0.4%)\n\n\n강북구\n\n1 (0.4%)\n\n\n강서구\n\n2 (0.9%)\n\n\n강진군\n\n1 (0.4%)\n\n\n강화군\n\n1 (0.4%)\n\n\n거제시\n\n1 (0.4%)\n\n\n거창군\n\n1 (0.4%)\n\n\n경산시\n\n1 (0.4%)\n\n\n경주시\n\n1 (0.4%)\n\n\n계룡시\n\n1 (0.4%)\n\n\n계양구\n\n1 (0.4%)\n\n\n고령군\n\n1 (0.4%)\n\n\n고성군\n\n2 (0.9%)\n\n\n고양시\n\n1 (0.4%)\n\n\n고창군\n\n1 (0.4%)\n\n\n고흥군\n\n1 (0.4%)\n\n\n곡성군\n\n1 (0.4%)\n\n\n공주시\n\n1 (0.4%)\n\n\n과천시\n\n1 (0.4%)\n\n\n관악구\n\n1 (0.4%)\n\n\n광명시\n\n1 (0.4%)\n\n\n광산구\n\n1 (0.4%)\n\n\n광양시\n\n1 (0.4%)\n\n\n광주시\n\n1 (0.4%)\n\n\n광진구\n\n1 (0.4%)\n\n\n괴산군\n\n1 (0.4%)\n\n\n구례군\n\n1 (0.4%)\n\n\n구로구\n\n1 (0.4%)\n\n\n구리시\n\n1 (0.4%)\n\n\n구미시\n\n1 (0.4%)\n\n\n군산시\n\n1 (0.4%)\n\n\n군위군\n\n1 (0.4%)\n\n\n군포시\n\n1 (0.4%)\n\n\n금산군\n\n1 (0.4%)\n\n\n금정구\n\n1 (0.4%)\n\n\n금천구\n\n1 (0.4%)\n\n\n기장군\n\n1 (0.4%)\n\n\n김제시\n\n1 (0.4%)\n\n\n김천시\n\n1 (0.4%)\n\n\n김포시\n\n1 (0.4%)\n\n\n김해시\n\n1 (0.4%)\n\n\n나주시\n\n1 (0.4%)\n\n\n남구\n\n4 (1.7%)\n\n\n남동구\n\n1 (0.4%)\n\n\n남양주시\n\n1 (0.4%)\n\n\n남원시\n\n1 (0.4%)\n\n\n남해군\n\n1 (0.4%)\n\n\n노원구\n\n1 (0.4%)\n\n\n논산시\n\n1 (0.4%)\n\n\n단양군\n\n1 (0.4%)\n\n\n달서구\n\n1 (0.4%)\n\n\n달성군\n\n1 (0.4%)\n\n\n담양군\n\n1 (0.4%)\n\n\n당진시\n\n1 (0.4%)\n\n\n대덕구\n\n1 (0.4%)\n\n\n도봉구\n\n1 (0.4%)\n\n\n동구\n\n6 (2.6%)\n\n\n동대문구\n\n1 (0.4%)\n\n\n동두천시\n\n1 (0.4%)\n\n\n동래구\n\n1 (0.4%)\n\n\n동작구\n\n1 (0.4%)\n\n\n동해시\n\n1 (0.4%)\n\n\n마포구\n\n1 (0.4%)\n\n\n목포시\n\n1 (0.4%)\n\n\n무안군\n\n1 (0.4%)\n\n\n무주군\n\n1 (0.4%)\n\n\n문경시\n\n1 (0.4%)\n\n\n미추홀구\n\n1 (0.4%)\n\n\n밀양시\n\n1 (0.4%)\n\n\n보령시\n\n1 (0.4%)\n\n\n보성군\n\n1 (0.4%)\n\n\n보은군\n\n1 (0.4%)\n\n\n봉화군\n\n1 (0.4%)\n\n\n부산진구\n\n1 (0.4%)\n\n\n부안군\n\n1 (0.4%)\n\n\n부여군\n\n1 (0.4%)\n\n\n부천시\n\n1 (0.4%)\n\n\n부평구\n\n1 (0.4%)\n\n\n북구\n\n4 (1.7%)\n\n\n사상구\n\n1 (0.4%)\n\n\n사천시\n\n1 (0.4%)\n\n\n사하구\n\n1 (0.4%)\n\n\n산청군\n\n1 (0.4%)\n\n\n삼척시\n\n1 (0.4%)\n\n\n상주시\n\n1 (0.4%)\n\n\n서구\n\n5 (2.2%)\n\n\n서귀포시\n\n1 (0.4%)\n\n\n서대문구\n\n1 (0.4%)\n\n\n서산시\n\n1 (0.4%)\n\n\n서천군\n\n1 (0.4%)\n\n\n서초구\n\n1 (0.4%)\n\n\n성남시\n\n1 (0.4%)\n\n\n성동구\n\n1 (0.4%)\n\n\n성북구\n\n1 (0.4%)\n\n\n성주군\n\n1 (0.4%)\n\n\n세종시\n\n1 (0.4%)\n\n\n속초시\n\n1 (0.4%)\n\n\n송파구\n\n1 (0.4%)\n\n\n수성구\n\n1 (0.4%)\n\n\n수영구\n\n1 (0.4%)\n\n\n수원시\n\n1 (0.4%)\n\n\n순창군\n\n1 (0.4%)\n\n\n순천시\n\n1 (0.4%)\n\n\n시흥시\n\n1 (0.4%)\n\n\n신안군\n\n1 (0.4%)\n\n\n아산시\n\n1 (0.4%)\n\n\n안동시\n\n1 (0.4%)\n\n\n안산시\n\n1 (0.4%)\n\n\n안성시\n\n1 (0.4%)\n\n\n안양시\n\n1 (0.4%)\n\n\n양구군\n\n1 (0.4%)\n\n\n양산시\n\n1 (0.4%)\n\n\n양양군\n\n1 (0.4%)\n\n\n양주시\n\n1 (0.4%)\n\n\n양천구\n\n1 (0.4%)\n\n\n양평군\n\n1 (0.4%)\n\n\n여수시\n\n1 (0.4%)\n\n\n여주시\n\n1 (0.4%)\n\n\n연수구\n\n1 (0.4%)\n\n\n연제구\n\n1 (0.4%)\n\n\n연천군\n\n1 (0.4%)\n\n\n영광군\n\n1 (0.4%)\n\n\n영덕군\n\n1 (0.4%)\n\n\n영도구\n\n1 (0.4%)\n\n\n영동군\n\n1 (0.4%)\n\n\n영등포구\n\n1 (0.4%)\n\n\n영암군\n\n1 (0.4%)\n\n\n영양군\n\n1 (0.4%)\n\n\n영월군\n\n1 (0.4%)\n\n\n영주시\n\n1 (0.4%)\n\n\n영천시\n\n1 (0.4%)\n\n\n예산군\n\n1 (0.4%)\n\n\n예천군\n\n1 (0.4%)\n\n\n오산시\n\n1 (0.4%)\n\n\n옥천군\n\n1 (0.4%)\n\n\n옹진군\n\n1 (0.4%)\n\n\n완도군\n\n1 (0.4%)\n\n\n완주군\n\n1 (0.4%)\n\n\n용산구\n\n1 (0.4%)\n\n\n용인시\n\n1 (0.4%)\n\n\n울릉군\n\n1 (0.4%)\n\n\n울주군\n\n1 (0.4%)\n\n\n울진군\n\n1 (0.4%)\n\n\n원주시\n\n1 (0.4%)\n\n\n유성구\n\n1 (0.4%)\n\n\n은평구\n\n1 (0.4%)\n\n\n음성군\n\n1 (0.4%)\n\n\n의령군\n\n1 (0.4%)\n\n\n의성군\n\n1 (0.4%)\n\n\n의왕시\n\n1 (0.4%)\n\n\n의정부시\n\n1 (0.4%)\n\n\n이천시\n\n1 (0.4%)\n\n\n익산시\n\n1 (0.4%)\n\n\n인제군\n\n1 (0.4%)\n\n\n임실군\n\n1 (0.4%)\n\n\n장성군\n\n1 (0.4%)\n\n\n장수군\n\n1 (0.4%)\n\n\n장흥군\n\n1 (0.4%)\n\n\n전주시\n\n1 (0.4%)\n\n\n정선군\n\n1 (0.4%)\n\n\n정읍시\n\n1 (0.4%)\n\n\n제주시\n\n1 (0.4%)\n\n\n제천시\n\n1 (0.4%)\n\n\n종로구\n\n1 (0.4%)\n\n\n중구\n\n6 (2.6%)\n\n\n중랑구\n\n1 (0.4%)\n\n\n증평군\n\n1 (0.4%)\n\n\n진도군\n\n1 (0.4%)\n\n\n진안군\n\n1 (0.4%)\n\n\n진주시\n\n1 (0.4%)\n\n\n진천군\n\n1 (0.4%)\n\n\n창녕군\n\n1 (0.4%)\n\n\n창원시\n\n1 (0.4%)\n\n\n천안시\n\n1 (0.4%)\n\n\n철원군\n\n1 (0.4%)\n\n\n청도군\n\n1 (0.4%)\n\n\n청송군\n\n1 (0.4%)\n\n\n청양군\n\n1 (0.4%)\n\n\n청주시\n\n1 (0.4%)\n\n\n춘천시\n\n1 (0.4%)\n\n\n충주시\n\n1 (0.4%)\n\n\n칠곡군\n\n1 (0.4%)\n\n\n태백시\n\n1 (0.4%)\n\n\n태안군\n\n1 (0.4%)\n\n\n통영시\n\n1 (0.4%)\n\n\n파주시\n\n1 (0.4%)\n\n\n평창군\n\n1 (0.4%)\n\n\n평택시\n\n1 (0.4%)\n\n\n포천시\n\n1 (0.4%)\n\n\n포항시\n\n1 (0.4%)\n\n\n하남시\n\n1 (0.4%)\n\n\n하동군\n\n1 (0.4%)\n\n\n함안군\n\n1 (0.4%)\n\n\n함양군\n\n1 (0.4%)\n\n\n함평군\n\n1 (0.4%)\n\n\n합천군\n\n1 (0.4%)\n\n\n해남군\n\n1 (0.4%)\n\n\n해운대구\n\n1 (0.4%)\n\n\n홍성군\n\n1 (0.4%)\n\n\n홍천군\n\n1 (0.4%)\n\n\n화성시\n\n1 (0.4%)\n\n\n화순군\n\n1 (0.4%)\n\n\n화천군\n\n1 (0.4%)\n\n\n횡성군\n\n1 (0.4%)\n\n\nSD_CD\n11\n\n25 (10.9%)\n\n\n21\n\n16 (7.0%)\n\n\n22\n\n9 (3.9%)\n\n\n23\n\n10 (4.4%)\n\n\n24\n\n5 (2.2%)\n\n\n25\n\n5 (2.2%)\n\n\n26\n\n5 (2.2%)\n\n\n29\n\n1 (0.4%)\n\n\n31\n\n31 (13.5%)\n\n\n32\n\n18 (7.9%)\n\n\n33\n\n11 (4.8%)\n\n\n34\n\n15 (6.6%)\n\n\n35\n\n14 (6.1%)\n\n\n36\n\n22 (9.6%)\n\n\n37\n\n22 (9.6%)\n\n\n38\n\n18 (7.9%)\n\n\n39\n\n2 (0.9%)\n\n\nSD_NM\n강원특별자치도\n\n18 (7.9%)\n\n\n경기도\n\n31 (13.5%)\n\n\n경상남도\n\n18 (7.9%)\n\n\n경상북도\n\n22 (9.6%)\n\n\n광주광역시\n\n5 (2.2%)\n\n\n대구광역시\n\n9 (3.9%)\n\n\n대전광역시\n\n5 (2.2%)\n\n\n부산광역시\n\n16 (7.0%)\n\n\n서울특별시\n\n25 (10.9%)\n\n\n세종특별자치시\n\n1 (0.4%)\n\n\n울산광역시\n\n5 (2.2%)\n\n\n인천광역시\n\n10 (4.4%)\n\n\n전라남도\n\n22 (9.6%)\n\n\n전라북도\n\n14 (6.1%)\n\n\n제주특별자치도\n\n2 (0.9%)\n\n\n충청남도\n\n15 (6.6%)\n\n\n충청북도\n\n11 (4.8%)\n\n\nregion\n강원제주\n\n20 (8.7%)\n\n\n경상권\n\n70 (30.6%)\n\n\n수도권\n\n66 (28.8%)\n\n\n전라권\n\n41 (17.9%)\n\n\n충청권\n\n32 (14.0%)\n\n\nsudo\n수도권\n\n66 (28.8%)\n\n\n비수도권\n\n163 (71.2%)\n\n\nbirths\nMean (SD)\n\n1,004.5 (1,138.4)\n\n\nMedian (IQR)\n\n630.0 (1,300.0)\n\n\nRange\n\n26.0 - 6,714.0\n\n\nCBR\nMean (SD)\n\n4.0 (1.2)\n\n\nMedian (IQR)\n\n3.9 (1.7)\n\n\nRange\n\n1.4 - 7.6\n\n\nincrease\nMean (SD)\n\n-534.9 (529.4)\n\n\nMedian (IQR)\n\n-548.0 (542.0)\n\n\nRange\n\n-2,201.0 - 3,138.0\n\n\nRNI\nMean (SD)\n\n-5.9 (5.3)\n\n\nMedian (IQR)\n\n-4.5 (8.3)\n\n\nRange\n\n-19.3 - 3.9\n\n\nGFR\nMean (SD)\n\n21.8 (5.6)\n\n\nMedian (IQR)\n\n21.0 (6.4)\n\n\nRange\n\n9.3 - 46.0\n\n\np_f1549\nMean (SD)\n\n37.0 (9.5)\n\n\nMedian (IQR)\n\n38.7 (16.8)\n\n\nRange\n\n17.7 - 54.5\n\n\nmom_age\nMean (SD)\n\n33.4 (0.7)\n\n\nMedian (IQR)\n\n33.4 (0.9)\n\n\nRange\n\n31.7 - 35.6\n\n\nTFR\nMean (SD)\n\n0.8 (0.2)\n\n\nMedian (IQR)\n\n0.8 (0.2)\n\n\nRange\n\n0.3 - 1.7\n\n\ndeaths\nMean (SD)\n\n1,539.3 (1,124.3)\n\n\nMedian (IQR)\n\n1,269.0 (1,298.0)\n\n\nRange\n\n72.0 - 6,578.0\n\n\nCDR\nMean (SD)\n\n9.9 (4.4)\n\n\nMedian (IQR)\n\n8.6 (7.2)\n\n\nRange\n\n3.7 - 21.2\n\n\nSMR\nMean (SD)\n\n6.9 (0.8)\n\n\nMedian (IQR)\n\n7.0 (0.9)\n\n\nRange\n\n4.3 - 8.8\n\n\n\n\n\n\n\nlibrary(GWalkR)\ngwalkr(df_kr)",
    "crumbs": [
      "통계적 방법론과 계량지리학",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>계량지리학</span>"
    ]
  },
  {
    "objectID": "2_2_exploratory_data_analysis.html",
    "href": "2_2_exploratory_data_analysis.html",
    "title": "\n4  탐색적 데이터 분석\n",
    "section": "",
    "text": "4.1 EDA의 정의와 필요성",
    "crumbs": [
      "기술통계와 탐색적 데이터 분석",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>탐색적 데이터 분석</span>"
    ]
  },
  {
    "objectID": "2_2_exploratory_data_analysis.html#eda의-정의와-필요성",
    "href": "2_2_exploratory_data_analysis.html#eda의-정의와-필요성",
    "title": "\n4  탐색적 데이터 분석\n",
    "section": "",
    "text": "4.1.1 Datasaurus 데이터\n왜 EDA가 중요한 가를 얘기할 때 예시로 가장 많이 등장하는 데이터가 Datasaurus dozen이라는 데이터이다. 이 데이터는 위키피디어의 데이터사이언스에 나타나 있기도 하다. 이 데이터는 datasauRus 패키지에서 이용가능하다.\n\nlibrary(tidyverse)\nlibrary(summarytools)\nlibrary(datasauRus)\nlibrary(flextable)\nlibrary(reactable)\nlibrary(broom)\n\n우선 데이터를 살펴본다. summarytools 패키지의 dfsummary() 함수를 사용한다. dataset 변수에 13개의 서로다른 데이터셋 이름이 들어가 있고, 각 데이터셋은 142개의 케이스와 x, y의 두 변수로 이루어져 있음을 알 수 있다.\n\ndatasaurus_dozen |&gt; \n  dfSummary(max.distinct.values = 13) |&gt; stview() \n\ndataset 컬럼의 첫 글자를 stringr 패키지의 str_to_title() 함수를 이용해 대문자로 바꾼다.\n\ndatasaurus_dozen &lt;- datasaurus_dozen |&gt; \n  mutate(dataset = str_to_title(dataset))\n\n요약 테이블을 만든다.\n\nsumm_tbl &lt;- datasaurus_dozen |&gt; \n  summarize(\n    mean_x = mean(x, na.rm = TRUE), \n    mean_y = mean(y, na.rm = TRUE),\n    sd_x = sd(x, na.rm = TRUE), \n    sd_y = sd(y, na.rm = TRUE),\n    cor_xy = cor(x, y),\n    .by = dataset\n  ) \n\nreg_res &lt;- datasaurus_dozen |&gt; \n  group_by(dataset) |&gt; \n  group_modify(~ tidy(lm(y ~ x, data = .x))) |&gt; \n  select(dataset, term, estimate) |&gt; \n  pivot_wider(names_from = term, values_from = estimate) |&gt; \n  rename(intercept = `(Intercept)`, slope = x)\n  \nsumm_tbl &lt;- summ_tbl |&gt; left_join(\n  reg_res, join_by(dataset)\n) |&gt; rename(\n    \"Dataset\"     = dataset,\n    \"Mean x\"      = mean_x,\n    \"Mean y\"      = mean_y,\n    \"Std Dev x\"   = sd_x,\n    \"Std Dev y\"   = sd_y,\n    \"Corr x y\"    = cor_xy,\n    \"Intercept\"   = intercept,\n    \"Coefficient\" = slope\n  ) |&gt; \n  arrange(Dataset)\n\nsumm_tbl\n\n# A tibble: 13 × 8\n   Dataset    `Mean x` `Mean y` `Std Dev x` `Std Dev y` `Corr x y` Intercept\n   &lt;chr&gt;         &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt;       &lt;dbl&gt;      &lt;dbl&gt;     &lt;dbl&gt;\n 1 Away           54.3     47.8        16.8        26.9    -0.0641      53.4\n 2 Bullseye       54.3     47.8        16.8        26.9    -0.0686      53.8\n 3 Circle         54.3     47.8        16.8        26.9    -0.0683      53.8\n 4 Dino           54.3     47.8        16.8        26.9    -0.0645      53.5\n 5 Dots           54.3     47.8        16.8        26.9    -0.0603      53.1\n 6 H_lines        54.3     47.8        16.8        26.9    -0.0617      53.2\n 7 High_lines     54.3     47.8        16.8        26.9    -0.0685      53.8\n 8 Slant_down     54.3     47.8        16.8        26.9    -0.0690      53.8\n 9 Slant_up       54.3     47.8        16.8        26.9    -0.0686      53.8\n10 Star           54.3     47.8        16.8        26.9    -0.0630      53.3\n11 V_lines        54.3     47.8        16.8        26.9    -0.0694      53.9\n12 Wide_lines     54.3     47.8        16.8        26.9    -0.0666      53.6\n13 X_shape        54.3     47.8        16.8        26.9    -0.0656      53.6\n# ℹ 1 more variable: Coefficient &lt;dbl&gt;\n\n\n이것을 gt 패키지를 이용해 깨끗한 표로 정리하면 다음과 같다.\n\nlibrary(gt)\ngt_tbl &lt;- summ_tbl |&gt; \n  gt() |&gt; \n  # 그룹 헤더(스패너)\n  tab_spanner(\n    label = \"Summary Statistics\",\n    id    = \"sumstat\",\n    columns = c(`Mean x`, `Mean y`, `Std Dev x`, `Std Dev y`, `Corr x y`)\n  ) |&gt; \n  tab_spanner(\n    label = \"Regression Results\",\n    id    = \"regres\",\n    columns = c(`Intercept`, `Coefficient`)\n  ) |&gt; \n  # 숫자 포맷\n  fmt_number(columns = -Dataset, decimals = 3) |&gt; \n  # 헤더(모든 컬럼 라벨 + 스패너) : 청색 바탕/흰 글씨\n  tab_style(\n    style = list(\n      cell_fill(color = \"#1f4e79\"),\n      cell_text(color = \"white\", weight = \"bold\")\n    ),\n    locations = list(\n      cells_column_labels(columns = everything()),\n      cells_column_spanners(spanners = c(\"sumstat\", \"regres\"))\n    )\n  ) |&gt; \n  # Dataset 컬럼(본문 셀): 옅은 초록\n  tab_style(\n    style = cell_fill(color = \"#d9ead3\"),\n    locations = cells_body(columns = Dataset)\n  ) |&gt; \n  # Summary Statistics 컬럼(본문 셀): 하늘색\n  tab_style(\n    style = cell_fill(color = \"#d0e7ff\"),\n    locations = cells_body(columns = c(`Mean x`, `Mean y`, `Std Dev x`, `Std Dev y`, `Corr x y`))\n  ) |&gt; \n  # Regression Results 컬럼(본문 셀): 회색\n  tab_style(\n    style = cell_fill(color = \"#e0e0e0\"),\n    locations = cells_body(columns = c(`Intercept`, `Coefficient`))\n  ) |&gt; \n  # 가독성 옵션(선택)\n  opt_row_striping()\ngt_tbl\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDataset\n\nSummary Statistics\n\n\nRegression Results\n\n\n\nMean x\nMean y\nStd Dev x\nStd Dev y\nCorr x y\nIntercept\nCoefficient\n\n\n\n\nAway\n54.266\n47.835\n16.770\n26.940\n−0.064\n53.425\n−0.103\n\n\nBullseye\n54.269\n47.831\n16.769\n26.936\n−0.069\n53.809\n−0.110\n\n\nCircle\n54.267\n47.838\n16.760\n26.930\n−0.068\n53.797\n−0.110\n\n\nDino\n54.263\n47.832\n16.765\n26.935\n−0.064\n53.453\n−0.104\n\n\nDots\n54.260\n47.840\n16.768\n26.930\n−0.060\n53.098\n−0.097\n\n\nH_lines\n54.261\n47.830\n16.766\n26.940\n−0.062\n53.211\n−0.099\n\n\nHigh_lines\n54.269\n47.835\n16.767\n26.940\n−0.069\n53.809\n−0.110\n\n\nSlant_down\n54.268\n47.836\n16.767\n26.936\n−0.069\n53.850\n−0.111\n\n\nSlant_up\n54.266\n47.831\n16.769\n26.939\n−0.069\n53.813\n−0.110\n\n\nStar\n54.267\n47.840\n16.769\n26.930\n−0.063\n53.327\n−0.101\n\n\nV_lines\n54.270\n47.837\n16.770\n26.938\n−0.069\n53.891\n−0.112\n\n\nWide_lines\n54.267\n47.832\n16.770\n26.938\n−0.067\n53.635\n−0.107\n\n\nX_shape\n54.260\n47.840\n16.770\n26.930\n−0.066\n53.554\n−0.105\n\n\n\n\n\n\ngtsave() 함수를 활용해 고해상도로 저장한다.\n\ngt_tbl |&gt; \n  gtsave(\n    \"table.png\", \n    vwidth = 2000, \n    vheight = 1200,\n    zoom = 2\n  )\n\n이제 13개 데이터셋의 산포도를 작성한다.\n\nggplot(datasaurus_dozen) +\n  geom_point(aes(x = x, y = y)) + \n  facet_wrap(~ dataset) +\n  theme(\n    strip.text = element_text(size = 14)\n  ) +\n  labs(caption = \"SANG-IL LEE, Geography Education at SNU, 2025\")",
    "crumbs": [
      "기술통계와 탐색적 데이터 분석",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>탐색적 데이터 분석</span>"
    ]
  },
  {
    "objectID": "2_2_exploratory_data_analysis.html#우리나라-시군구-출산력-데이터에-대한-eda",
    "href": "2_2_exploratory_data_analysis.html#우리나라-시군구-출산력-데이터에-대한-eda",
    "title": "\n4  탐색적 데이터 분석\n",
    "section": "\n4.2 우리나라 시군구 출산력 데이터에 대한 EDA",
    "text": "4.2 우리나라 시군구 출산력 데이터에 대한 EDA\n\n4.2.1 데이터 불러오기\n\ndf_kr &lt;- read_rds(\"data/df_kr_2023.rds\")\ndf_kr\n\n# A tibble: 229 × 17\n   SGG_CD SGG_NM   SD_CD SD_NM  region sudo  births   CBR increase     RNI   GFR\n    &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;  &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;\n 1  11010 종로구   11    서울특별시… 수도권 수도권……    396  2.86     -548 -3.96    11.8\n 2  11020 중구     11    서울특별시… 수도권 수도권……    534  4.48     -292 -2.45    18.2\n 3  11030 용산구   11    서울특별시… 수도권 수도권……   1012  4.76     -231 -1.09    18.5\n 4  11040 성동구   11    서울특별시… 수도권 수도권……   1483  5.35        6  0.0217  21.2\n 5  11050 광진구   11    서울특별시… 수도권 수도권……   1231  3.69     -401 -1.20    13.7\n 6  11060 동대문구 11    서울특별시… 수도권 수도권……   1359  4.04     -944 -2.81    16.5\n 7  11070 중랑구   11    서울특별시… 수도권 수도권……   1762  4.62     -726 -1.90    20.4\n 8  11080 성북구   11    서울특별시… 수도권 수도권……   1695  3.99     -825 -1.94    16.2\n 9  11090 강북구   11    서울특별시… 수도권 수도권……    826  2.86    -1436 -4.97    13.4\n10  11100 도봉구   11    서울특별시… 수도권 수도권……    971  3.16    -1128 -3.67    14.9\n# ℹ 219 more rows\n# ℹ 6 more variables: p_f1549 &lt;dbl&gt;, mom_age &lt;dbl&gt;, TFR &lt;dbl&gt;, deaths &lt;dbl&gt;,\n#   CDR &lt;dbl&gt;, SMR &lt;dbl&gt;\n\n\nglimpse() 함수로 본다.\n\ndf_kr |&gt; glimpse()\n\nRows: 229\nColumns: 17\n$ SGG_CD   &lt;dbl&gt; 11010, 11020, 11030, 11040, 11050, 11060, 11070, 11080, 11090…\n$ SGG_NM   &lt;chr&gt; \"종로구\", \"중구\", \"용산구\", \"성동구\", \"광진구\", \"동대문구\", \"중랑구\", \"성북구\", \"강북구\"…\n$ SD_CD    &lt;chr&gt; \"11\", \"11\", \"11\", \"11\", \"11\", \"11\", \"11\", \"11\", \"11\", \"11\", \"…\n$ SD_NM    &lt;chr&gt; \"서울특별시\", \"서울특별시\", \"서울특별시\", \"서울특별시\", \"서울특별시\", \"서울특별시\", \"서울특별시\"…\n$ region   &lt;chr&gt; \"수도권\", \"수도권\", \"수도권\", \"수도권\", \"수도권\", \"수도권\", \"수도권\", \"수도권\", \"수도권\"…\n$ sudo     &lt;chr&gt; \"수도권\", \"수도권\", \"수도권\", \"수도권\", \"수도권\", \"수도권\", \"수도권\", \"수도권\", \"수도권\"…\n$ births   &lt;dbl&gt; 396, 534, 1012, 1483, 1231, 1359, 1762, 1695, 826, 971, 2091,…\n$ CBR      &lt;dbl&gt; 2.859185, 4.479603, 4.763765, 5.354554, 3.685728, 4.039323, 4…\n$ increase &lt;dbl&gt; -548, -292, -231, 6, -401, -944, -726, -825, -1436, -1128, -1…\n$ RNI      &lt;dbl&gt; -3.95665013, -2.44952058, -1.08738120, 0.02166374, -1.2006311…\n$ GFR      &lt;dbl&gt; 11.770126, 18.225256, 18.476594, 21.231970, 13.666996, 16.513…\n$ p_f1549  &lt;dbl&gt; 46.95346, 47.65157, 49.62513, 49.00427, 51.95035, 48.05435, 4…\n$ mom_age  &lt;dbl&gt; 34.76, 34.61, 34.85, 34.79, 34.73, 34.62, 34.10, 34.65, 34.13…\n$ TFR      &lt;dbl&gt; 0.406, 0.534, 0.547, 0.639, 0.449, 0.566, 0.623, 0.588, 0.478…\n$ deaths   &lt;dbl&gt; 944, 826, 1243, 1477, 1632, 2303, 2488, 2520, 2262, 2099, 310…\n$ CDR      &lt;dbl&gt; 6.815835, 6.929123, 5.851146, 5.332890, 4.886359, 6.845152, 6…\n$ SMR      &lt;dbl&gt; 5.844751, 5.798858, 5.555570, 5.423688, 5.379729, 6.453937, 6…\n\n\nreactable 패키지를 활용해 기본적인 인터렉티브 테이블을 만든다. 다양한 인수를 조정하여 원하는 형태의 테이블을 만들어 낸다.\n\ndf_kr |&gt; \n  reactable(\n    searchable = TRUE,\n    theme = reactableTheme(\n      style = list(\n        fontSize = \"13px\"\n      )\n    ),\n    columns = list(\n      SGG_NM = colDef(sticky = \"left\"),\n      SD_NM = colDef(sticky = \"left\"),\n      CBR = colDef(format = colFormat(digits= 3)), \n      RNI = colDef(format = colFormat(digits= 3)), \n      GFR = colDef(format = colFormat(digits= 3)),\n      p_f1549 = colDef(format = colFormat(digits= 3)),\n      TFR = colDef(format = colFormat(digits= 3)), \n      CDR = colDef(format = colFormat(digits= 3)), \n      SMR = colDef(format = colFormat(digits= 3)), \n      births = colDef(format = colFormat(separators = TRUE)), \n      deaths = colDef(format = colFormat(separators = TRUE)), \n      increase = colDef(format = colFormat(separators = TRUE))\n    )\n  )\n\n\n\n\n\n\n4.2.2 기술 통계\n다양한 기술 통계를 한꺼번에 보여줄 수 있는 가장 좋은 방법은 summarytools 패키지를 사용하는 것으로 보인다. descr() 함수를 사용한다.\n\nlibrary(summarytools)\ndf_kr |&gt; descr() |&gt; \n  print(method = \"render\", omit.headings = TRUE)\n\n\nDescriptive Statistics\ndf_kr\nN: 229\n\n\n\nbirths\nCBR\nCDR\ndeaths\nGFR\nincrease\nmom_age\np_f1549\nRNI\nSGG_CD\nSMR\nTFR\n\n\n\nMean\n1004.49\n3.96\n9.86\n1539.35\n21.79\n-534.86\n33.42\n37.00\n-5.90\n29559.34\n6.93\n0.82\n\n\nStd.Dev\n1138.41\n1.23\n4.42\n1124.27\n5.59\n529.41\n0.69\n9.49\n5.31\n8376.92\n0.78\n0.21\n\n\nMin\n26.00\n1.40\n3.69\n72.00\n9.33\n-2201.00\n31.71\n17.75\n-19.31\n11010.00\n4.32\n0.32\n\n\nQ1\n172.00\n3.08\n6.03\n724.00\n18.09\n-850.00\n32.98\n28.14\n-10.01\n23090.00\n6.52\n0.69\n\n\nMedian\n630.00\n3.93\n8.57\n1269.00\n20.96\n-548.00\n33.35\n38.72\n-4.47\n32510.00\n7.02\n0.79\n\n\nQ3\n1472.00\n4.76\n13.28\n2022.00\n24.48\n-308.00\n33.90\n44.92\n-1.67\n36520.00\n7.43\n0.92\n\n\nMax\n6714.00\n7.58\n21.19\n6578.00\n45.97\n3138.00\n35.57\n54.49\n3.88\n39020.00\n8.80\n1.65\n\n\nMAD\n779.85\n1.26\n4.67\n931.07\n4.71\n379.55\n0.62\n11.21\n5.67\n6701.35\n0.70\n0.17\n\n\nIQR\n1300.00\n1.68\n7.25\n1298.00\n6.38\n542.00\n0.92\n16.78\n8.33\n13430.00\n0.90\n0.23\n\n\nCV\n1.13\n0.31\n0.45\n0.73\n0.26\n-0.99\n0.02\n0.26\n-0.90\n0.28\n0.11\n0.26\n\n\nSkewness\n1.97\n0.32\n0.57\n1.59\n1.09\n1.57\n0.32\n-0.28\n-0.48\n-1.02\n-0.50\n0.79\n\n\nSE.Skewness\n0.16\n0.16\n0.16\n0.16\n0.16\n0.16\n0.16\n0.16\n0.16\n0.16\n0.16\n0.16\n\n\nKurtosis\n4.81\n-0.14\n-0.87\n3.28\n1.84\n9.70\n-0.28\n-1.18\n-0.85\n-0.07\n0.39\n0.93\n\n\nN.Valid\n229\n229\n229\n229\n229\n229\n229\n229\n229\n229\n229\n229\n\n\nN\n229\n229\n229\n229\n229\n229\n229\n229\n229\n229\n229\n229\n\n\nPct.Valid\n100.00\n100.00\n100.00\n100.00\n100.00\n100.00\n100.00\n100.00\n100.00\n100.00\n100.00\n100.00\n\n\n\nGenerated by summarytools 1.1.4 (R version 4.4.3)2025-08-29\n\n\n\n\n결과를 reactable() 함수와 연결할 수 있다. 이후 포맷팅을 할 수 있다.\n\nlibrary(knitr)\ndf_kr |&gt; descr() |&gt; reactable()\n\n\n\n\n\n\ndfSummary() 함수를 사용하면 보다 다양한 결과물을 얻을 수 있다.\n\ndf_kr |&gt; dfSummary() |&gt; print(method = \"render\", omit.headings = TRUE)\n\n\nData Frame Summary\ndf_kr\nDimensions: 229 x 17\n  Duplicates: 0\n\n\n\n\n\n\n\n\n\n\n\nNo\nVariable\nStats / Values\nFreqs (% of Valid)\nGraph\nValid\nMissing\n\n\n\n1\nSGG_CD [numeric]\n\n\nMean (sd) : 29559.3 (8376.9)\n\n\nmin ≤ med ≤ max:\n\n\n11010 ≤ 32510 ≤ 39020\n\n\nIQR (CV) : 13430 (0.3)\n\n\n229 distinct values\n\n229 (100.0%)\n0 (0.0%)\n\n\n2\nSGG_NM [character]\n\n\n1. 동구\n\n\n2. 중구\n\n\n3. 서구\n\n\n4. 남구\n\n\n5. 북구\n\n\n6. 강서구\n\n\n7. 고성군\n\n\n8. 가평군\n\n\n9. 강남구\n\n\n10. 강동구\n\n\n[ 197 others ]\n\n\n\n\n6\n(\n2.6%\n)\n\n\n6\n(\n2.6%\n)\n\n\n5\n(\n2.2%\n)\n\n\n4\n(\n1.7%\n)\n\n\n4\n(\n1.7%\n)\n\n\n2\n(\n0.9%\n)\n\n\n2\n(\n0.9%\n)\n\n\n1\n(\n0.4%\n)\n\n\n1\n(\n0.4%\n)\n\n\n1\n(\n0.4%\n)\n\n\n197\n(\n86.0%\n)\n\n\n\n229 (100.0%)\n0 (0.0%)\n\n\n3\nSD_CD [character]\n\n\n1. 31\n\n\n2. 11\n\n\n3. 36\n\n\n4. 37\n\n\n5. 32\n\n\n6. 38\n\n\n7. 21\n\n\n8. 34\n\n\n9. 35\n\n\n10. 33\n\n\n[ 7 others ]\n\n\n\n\n31\n(\n13.5%\n)\n\n\n25\n(\n10.9%\n)\n\n\n22\n(\n9.6%\n)\n\n\n22\n(\n9.6%\n)\n\n\n18\n(\n7.9%\n)\n\n\n18\n(\n7.9%\n)\n\n\n16\n(\n7.0%\n)\n\n\n15\n(\n6.6%\n)\n\n\n14\n(\n6.1%\n)\n\n\n11\n(\n4.8%\n)\n\n\n37\n(\n16.2%\n)\n\n\n\n229 (100.0%)\n0 (0.0%)\n\n\n4\nSD_NM [character]\n\n\n1. 경기도\n\n\n2. 서울특별시\n\n\n3. 경상북도\n\n\n4. 전라남도\n\n\n5. 강원특별자치도\n\n\n6. 경상남도\n\n\n7. 부산광역시\n\n\n8. 충청남도\n\n\n9. 전라북도\n\n\n10. 충청북도\n\n\n[ 7 others ]\n\n\n\n\n31\n(\n13.5%\n)\n\n\n25\n(\n10.9%\n)\n\n\n22\n(\n9.6%\n)\n\n\n22\n(\n9.6%\n)\n\n\n18\n(\n7.9%\n)\n\n\n18\n(\n7.9%\n)\n\n\n16\n(\n7.0%\n)\n\n\n15\n(\n6.6%\n)\n\n\n14\n(\n6.1%\n)\n\n\n11\n(\n4.8%\n)\n\n\n37\n(\n16.2%\n)\n\n\n\n229 (100.0%)\n0 (0.0%)\n\n\n5\nregion [character]\n\n\n1. 강원제주\n\n\n2. 경상권\n\n\n3. 수도권\n\n\n4. 전라권\n\n\n5. 충청권\n\n\n\n\n20\n(\n8.7%\n)\n\n\n70\n(\n30.6%\n)\n\n\n66\n(\n28.8%\n)\n\n\n41\n(\n17.9%\n)\n\n\n32\n(\n14.0%\n)\n\n\n\n229 (100.0%)\n0 (0.0%)\n\n\n6\nsudo [character]\n\n\n1. 비수도권\n\n\n2. 수도권\n\n\n\n\n163\n(\n71.2%\n)\n\n\n66\n(\n28.8%\n)\n\n\n\n229 (100.0%)\n0 (0.0%)\n\n\n7\nbirths [numeric]\n\n\nMean (sd) : 1004.5 (1138.4)\n\n\nmin ≤ med ≤ max:\n\n\n26 ≤ 630 ≤ 6714\n\n\nIQR (CV) : 1300 (1.1)\n\n\n209 distinct values\n\n229 (100.0%)\n0 (0.0%)\n\n\n8\nCBR [numeric]\n\n\nMean (sd) : 4 (1.2)\n\n\nmin ≤ med ≤ max:\n\n\n1.4 ≤ 3.9 ≤ 7.6\n\n\nIQR (CV) : 1.7 (0.3)\n\n\n229 distinct values\n\n229 (100.0%)\n0 (0.0%)\n\n\n9\nincrease [numeric]\n\n\nMean (sd) : -534.9 (529.4)\n\n\nmin ≤ med ≤ max:\n\n\n-2201 ≤ -548 ≤ 3138\n\n\nIQR (CV) : 542 (-1)\n\n\n215 distinct values\n\n229 (100.0%)\n0 (0.0%)\n\n\n10\nRNI [numeric]\n\n\nMean (sd) : -5.9 (5.3)\n\n\nmin ≤ med ≤ max:\n\n\n-19.3 ≤ -4.5 ≤ 3.9\n\n\nIQR (CV) : 8.3 (-0.9)\n\n\n229 distinct values\n\n229 (100.0%)\n0 (0.0%)\n\n\n11\nGFR [numeric]\n\n\nMean (sd) : 21.8 (5.6)\n\n\nmin ≤ med ≤ max:\n\n\n9.3 ≤ 21 ≤ 46\n\n\nIQR (CV) : 6.4 (0.3)\n\n\n229 distinct values\n\n229 (100.0%)\n0 (0.0%)\n\n\n12\np_f1549 [numeric]\n\n\nMean (sd) : 37 (9.5)\n\n\nmin ≤ med ≤ max:\n\n\n17.7 ≤ 38.7 ≤ 54.5\n\n\nIQR (CV) : 16.8 (0.3)\n\n\n229 distinct values\n\n229 (100.0%)\n0 (0.0%)\n\n\n13\nmom_age [numeric]\n\n\nMean (sd) : 33.4 (0.7)\n\n\nmin ≤ med ≤ max:\n\n\n31.7 ≤ 33.4 ≤ 35.6\n\n\nIQR (CV) : 0.9 (0)\n\n\n161 distinct values\n\n229 (100.0%)\n0 (0.0%)\n\n\n14\nTFR [numeric]\n\n\nMean (sd) : 0.8 (0.2)\n\n\nmin ≤ med ≤ max:\n\n\n0.3 ≤ 0.8 ≤ 1.7\n\n\nIQR (CV) : 0.2 (0.3)\n\n\n194 distinct values\n\n229 (100.0%)\n0 (0.0%)\n\n\n15\ndeaths [numeric]\n\n\nMean (sd) : 1539.3 (1124.3)\n\n\nmin ≤ med ≤ max:\n\n\n72 ≤ 1269 ≤ 6578\n\n\nIQR (CV) : 1298 (0.7)\n\n\n223 distinct values\n\n229 (100.0%)\n0 (0.0%)\n\n\n16\nCDR [numeric]\n\n\nMean (sd) : 9.9 (4.4)\n\n\nmin ≤ med ≤ max:\n\n\n3.7 ≤ 8.6 ≤ 21.2\n\n\nIQR (CV) : 7.2 (0.4)\n\n\n229 distinct values\n\n229 (100.0%)\n0 (0.0%)\n\n\n17\nSMR [numeric]\n\n\nMean (sd) : 6.9 (0.8)\n\n\nmin ≤ med ≤ max:\n\n\n4.3 ≤ 7 ≤ 8.8\n\n\nIQR (CV) : 0.9 (0.1)\n\n\n229 distinct values\n\n229 (100.0%)\n0 (0.0%)\n\n\n\nGenerated by summarytools 1.1.4 (R version 4.4.3)2025-08-29\n\n\n\n\n4.2.3 시각화\n\n4.2.3.1 일변량 시각화\nTFR 변수에 몇 가지 시각화 기법을 적용한다. 히스토그램과 도수분포다각형을 그린다.\n\nggplot(data = df_kr, aes(x = TFR)) +\n  geom_histogram(binwidth = 0.05, color = \"white\") +\n  geom_freqpoly(binwidth = 0.05, color = \"red\") +\n  labs(\n    x = \"TFR\", y = \"Count\",\n    title = \"Total Fertility Rate (TFR) in South Korea, 2023\", \n    caption = \"SANG-IL LEE, Geography Education at SNU, 2025\", \n  ) \n\n\n\n\n\n\n\n히스토그램 위에 커널밀도플롯을 그린다.\n\nggplot(data = df_kr, aes(x = TFR)) +\n  geom_histogram(\n    aes(y = after_stat(density)),\n    binwidth = 0.05, color = \"black\", fill = \"white\") +\n  geom_density(alpha = .2, fill = \"#FF6666\") +\n  labs(\n    x = \"TFR\", y = \"Count\",\n    title = \"Total Fertility Rate (TFR) in South Korea, 2023\", \n    caption = \"SANG-IL LEE, Geography Education at SNU, 2025\", \n  ) \n\n\n\n\n\n\n\n히스토그램 위에 정규분포곡선을 그린다.\n\nggplot(data = df_kr, aes(x = TFR)) +\n  geom_histogram(\n    aes(y = after_stat(density)),\n    binwidth = 0.05, color = \"black\", fill = \"white\") +\n  stat_function(\n    fun = dnorm, color = \"red\",  \n    args = list(\n      mean = mean(df_kr$TFR, na.rm = TRUE),\n      sd = sd(df_kr$TFR, na.rm = TRUE)\n    ) \n  ) +\n  labs(\n    x = \"TFR\", y = \"Density\",\n    title = \"Total Fertility Rate (TFR) in South Korea, 2023\", \n    caption = \"SANG-IL LEE, Geography Education at SNU, 2025\", \n  ) \n\n\n\n\n\n\n\n권역별 박스플롯을 제작한다.\n\nbox &lt;- ggplot(\n  data = df_kr, \n  aes(x = fct_reorder(region, TFR, median), \n      y = TFR, \n      fill = fct_reorder(region, TFR, median))\n  ) +\n  geom_boxplot(outlier.size = 2) +\n  stat_summary(fun = mean, geom = \"point\", shape = 23) +\n  scale_fill_brewer(palette = \"Set2\") +\n  labs(\n    x = \"권역\", y = \"TFR\",\n    title = \"Total Fertility Rate (TFR) in South Korea, 2023\", \n    caption = \"SANG-IL LEE, Geography Education at SNU, 2025\" \n  ) +\n  theme(legend.position = \"none\")\nbox\n\n\n\n\n\n\n\n저장한다.\n\nggsave(scale = 2, \"box.png\", box, width = 12, height = 12 * 0.618, dpi = 600)\n\n권역별 바이올린플롯(violin plot)을 그린다.\n\nggplot(\n  data = df_kr, \n  aes(x = fct_reorder(region, TFR, median), \n      y = TFR, \n      fill = fct_reorder(region, TFR, median))\n  ) +\n  geom_violin() +\n  geom_boxplot(fill = \"white\", width = 0.1, outlier.size = 2) +\n  stat_summary(fun = mean, geom = \"point\", shape = 23) +\n  scale_fill_brewer(palette = \"Set2\") +\n  labs(\n    x = \"권역\", y = \"TFR\",\n    title = \"Total Fertility Rate (TFR) in South Korea, 2023\", \n    caption = \"SANG-IL LEE, Geography Education at SNU, 2025\" \n  ) +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\nggridges 패키지를 활용하여 리지라인(ridgeline) 플롯을 그린다.\n\nlibrary(ggridges)\nggridge &lt;- ggplot(data = df_kr, aes(x = TFR, y = SD_CD, fill = region)) +\n  geom_density_ridges(alpha = 0.7) +\n  theme(legend.position = \"none\") +\n  labs(\n    y = \"Region\", \n    caption = \"SANG-IL LEE, Geography Education at SNU, 2025\")\nggridge\n\n\n\n\n\n\n\n저장한다.\n\nggsave(\"ggridge.png\", ggridge, width = 12, height = 12*0.618, dpi = 600)\n\n\n4.2.3.2 이변량 시각화\nTFR과 CBR 간의 산포도를 제작한다.\n\ncorr &lt;- cor(df_kr$TFR, df_kr$CBR) |&gt; round(4)\nggplot(data = df_kr, aes(x = TFR, y = CBR)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", color = \"tomato\") +\n  annotate(\n    geom = \"text\", x = 0.5, y = 9.5, \n    label = bquote(\"Pearson's \"*italic(r) == .(corr))\n  ) + \n  labs(caption = \"SANG-IL LEE, Geography Education at SNU, 2025\")\n\n\n\n\n\n\n\n\n4.2.3.3 다변량 시각화\nggcorrplot 패키지를 활용하여 상관관계 매트릭스를 제작한다.\n\ncor_data &lt;- df_kr |&gt; \n  select(\n    CBR, RNI, GFR, p_f1549, mom_age, TFR\n  ) \ncor_mat &lt;- cor(cor_data)\n\nlibrary(ggcorrplot)\nggcorrplot(\n  cor_mat, \n  hc.order = TRUE, \n  tl.cex = 18, \n  lab = TRUE, \n  lab_size = 6, \n  outline.color = \"gray80\", \n  colors = c(\"#6D9EC1\", \"white\", \"#E46726\"), digits = 3) + \n  labs(caption = \"SANG-IL LEE, Geography Education at SNU, 2025\")\n\n\n\n\n\n\n\nGGally 패키지를 사용하면 좀 더 복잡한 플롯을 제작할 수 있다.\n\nlibrary(GGally)\nggpairs(cor_data) + \n  theme(\n    axis.line = element_blank(), \n    axis.text = element_blank(), \n    axis.ticks = element_blank(), \n    aspect.ratio = 3/4,\n    plot.margin=grid::unit(c(0,0,0,0), \"mm\")\n  ) + labs(caption = \"SANG-IL LEE, Geography Education at SNU, 2025\")\n\n\n\n\n\n\n\nscatterplot3d 패키지를 활용하여 3차원 산점도를 그린다.\n\nlibrary(scatterplot3d)\nwith(cor_data, \n     {scatterplot3d(x = TFR, y = CBR, p_f1549, \n                    main = \"3-D Scatterplot\", \n                    pch = 16,asp = 0.03\n                    )\n     }\n     )\n\n\n\n\n\n\n\necharts4r 패키지를 활용하여 입체적인 인터랙티브 산점도를 그린다.\n\nlibrary(echarts4r)\ndf_kr |&gt; mutate(F_NM = str_c(SD_NM, SGG_NM, sep = \" \")) |&gt; \n  group_by(region) |&gt; \n  e_charts(TFR) |&gt; \n  e_scatter_3d(CBR, p_f1549, bind = F_NM, \n               wireframe = list(show = TRUE)) |&gt; \n  e_x_axis_3d(name = \"TFR\") |&gt; \n  e_y_axis_3d(name = \"CBR\") |&gt; \n  e_z_axis_3d(name = \"p_f1549\") |&gt; \n  e_tooltip(\n    formatter = htmlwidgets::JS(\"\n      function(params){\n        return '지역: ' + params.name + '&lt;br&gt;' + \n               'TFR: ' + params.value[0].toFixed(3) + '&lt;br&gt;' +\n               'CBR: ' + params.value[1].toFixed(3) + '&lt;br&gt;' +\n               'p_f1549: ' + params.value[2].toFixed(3);\n      }\n    \")    \n  ) |&gt; \n  e_legend(show = TRUE)",
    "crumbs": [
      "기술통계와 탐색적 데이터 분석",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>탐색적 데이터 분석</span>"
    ]
  },
  {
    "objectID": "2_2_exploratory_data_analysis.html#완벽한-eda-도구-gwalkr-패키지",
    "href": "2_2_exploratory_data_analysis.html#완벽한-eda-도구-gwalkr-패키지",
    "title": "\n4  탐색적 데이터 분석\n",
    "section": "\n4.3 완벽한 EDA 도구: GWalkR 패키지",
    "text": "4.3 완벽한 EDA 도구: GWalkR 패키지\n현재 나와 있는 도구 중 EDA를 완벽히 구현하고 있는 것은 아마도 GWalkR 패키지일 것이다. RStudio의 Viewer 창에서 다양한 EDA를 실행해 볼 수 있다.\n\nlibrary(GWalkR)\ngwalkr(df_kr)\n\n\n\n\n\nPython 용인 WyGWalker 역시 존재한다.",
    "crumbs": [
      "기술통계와 탐색적 데이터 분석",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>탐색적 데이터 분석</span>"
    ]
  }
]